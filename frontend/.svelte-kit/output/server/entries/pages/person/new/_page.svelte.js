import { c as create_ssr_component, h as createEventDispatcher, e as each, d as escape, b as add_attribute, v as validate_component } from "../../../../chunks/ssr.js";
import "@sveltejs/kit/internal";
import "../../../../chunks/exports.js";
import "../../../../chunks/utils.js";
import "@sveltejs/kit/internal/server";
import "../../../../chunks/state.svelte.js";
/* empty css                                                           */
const css$1 = {
  code: ".religion-caste-container.svelte-7rhb5k{display:grid;grid-template-columns:1fr;gap:1rem}@media(min-width: 768px){.religion-caste-container.svelte-7rhb5k{grid-template-columns:1fr 1fr}}.form-group.svelte-7rhb5k{display:flex;flex-direction:column;gap:0.5rem}.form-label.svelte-7rhb5k{font-weight:500;color:#374151;font-size:0.875rem}.form-select.svelte-7rhb5k{padding:0.5rem 0.75rem;border:1px solid #d1d5db;border-radius:0.375rem;font-size:1rem;background-color:white;transition:all 0.2s}.form-select.svelte-7rhb5k:focus{outline:none;border-color:#3b82f6;box-shadow:0 0 0 3px rgba(59, 130, 246, 0.1)}.form-select.svelte-7rhb5k:disabled{background-color:#f3f4f6;cursor:not-allowed;opacity:0.6}.form-select.error.svelte-7rhb5k{border-color:#ef4444}.form-select.error.svelte-7rhb5k:focus{border-color:#ef4444;box-shadow:0 0 0 3px rgba(239, 68, 68, 0.1)}.error-message.svelte-7rhb5k{color:#ef4444;font-size:0.875rem;margin:0}.help-text.svelte-7rhb5k{color:#6b7280;font-size:0.875rem;margin:0;font-style:italic}",
  map: '{"version":3,"file":"ReligionCaste.svelte","sources":["ReligionCaste.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { createEventDispatcher } from \\"svelte\\";\\nexport let selectedReligion = \\"\\";\\nexport let selectedCaste = \\"\\";\\nexport let religionError = \\"\\";\\nexport let casteError = \\"\\";\\nexport let disabled = false;\\nexport let religionCasteData = [];\\nconst dispatch = createEventDispatcher();\\nlet availableCastes = [];\\n$: {\\n  if (selectedReligion && religionCasteData.length > 0) {\\n    const mapping = religionCasteData.find((item) => item.religion === selectedReligion);\\n    availableCastes = mapping ? mapping.castes : [];\\n    if (selectedCaste && !availableCastes.includes(selectedCaste)) {\\n      selectedCaste = \\"\\";\\n      dispatch(\\"casteChange\\", selectedCaste);\\n    }\\n  } else {\\n    availableCastes = [];\\n    if (!selectedReligion) {\\n      selectedCaste = \\"\\";\\n    }\\n  }\\n}\\nfunction handleReligionChange(event) {\\n  const target = event.target;\\n  selectedReligion = target.value;\\n  dispatch(\\"religionChange\\", selectedReligion);\\n}\\nfunction handleCasteChange(event) {\\n  const target = event.target;\\n  selectedCaste = target.value;\\n  dispatch(\\"casteChange\\", selectedCaste);\\n}\\n<\/script>\\n\\n<div class=\\"religion-caste-container\\">\\n  <!-- Religion Dropdown -->\\n  <div class=\\"form-group\\">\\n    <label for=\\"religion\\" class=\\"form-label\\">\\n      Religion\\n    </label>\\n    <select\\n      id=\\"religion\\"\\n      bind:value={selectedReligion}\\n      on:change={handleReligionChange}\\n      class=\\"form-select\\"\\n      class:error={religionError}\\n      {disabled}\\n    >\\n      <option value=\\"\\">Select a Religion</option>\\n      {#each religionCasteData.map(item => item.religion) as religion}\\n        <option value={religion}>{religion}</option>\\n      {/each}\\n    </select>\\n    {#if religionError}\\n      <p class=\\"error-message\\">{religionError}</p>\\n    {/if}\\n  </div>\\n\\n  <!-- Caste Dropdown -->\\n  <div class=\\"form-group\\">\\n    <label for=\\"caste\\" class=\\"form-label\\">\\n      Caste\\n    </label>\\n    <select\\n      id=\\"caste\\"\\n      bind:value={selectedCaste}\\n      on:change={handleCasteChange}\\n      class=\\"form-select\\"\\n      class:error={casteError}\\n      disabled={disabled || !selectedReligion}\\n    >\\n      <option value=\\"\\">Select a Caste</option>\\n      {#each availableCastes as caste}\\n        <option value={caste}>{caste}</option>\\n      {/each}\\n    </select>\\n    {#if casteError}\\n      <p class=\\"error-message\\">{casteError}</p>\\n    {/if}\\n    {#if !selectedReligion}\\n      <p class=\\"help-text\\">Please select a religion first</p>\\n    {/if}\\n  </div>\\n</div>\\n\\n<style>\\n  .religion-caste-container {\\n    display: grid;\\n    grid-template-columns: 1fr;\\n    gap: 1rem;\\n  }\\n\\n  @media (min-width: 768px) {\\n    .religion-caste-container {\\n      grid-template-columns: 1fr 1fr;\\n    }\\n  }\\n\\n  .form-group {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 0.5rem;\\n  }\\n\\n  .form-label {\\n    font-weight: 500;\\n    color: #374151;\\n    font-size: 0.875rem;\\n  }\\n\\n  .form-select {\\n    padding: 0.5rem 0.75rem;\\n    border: 1px solid #d1d5db;\\n    border-radius: 0.375rem;\\n    font-size: 1rem;\\n    background-color: white;\\n    transition: all 0.2s;\\n  }\\n\\n  .form-select:focus {\\n    outline: none;\\n    border-color: #3b82f6;\\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\\n  }\\n\\n  .form-select:disabled {\\n    background-color: #f3f4f6;\\n    cursor: not-allowed;\\n    opacity: 0.6;\\n  }\\n\\n  .form-select.error {\\n    border-color: #ef4444;\\n  }\\n\\n  .form-select.error:focus {\\n    border-color: #ef4444;\\n    box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);\\n  }\\n\\n  .error-message {\\n    color: #ef4444;\\n    font-size: 0.875rem;\\n    margin: 0;\\n  }\\n\\n  .help-text {\\n    color: #6b7280;\\n    font-size: 0.875rem;\\n    margin: 0;\\n    font-style: italic;\\n  }\\n</style>\\n"],"names":[],"mappings":"AAwFE,uCAA0B,CACxB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAC1B,GAAG,CAAE,IACP,CAEA,MAAO,YAAY,KAAK,CAAE,CACxB,uCAA0B,CACxB,qBAAqB,CAAE,GAAG,CAAC,GAC7B,CACF,CAEA,yBAAY,CACV,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,GAAG,CAAE,MACP,CAEA,yBAAY,CACV,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,QACb,CAEA,0BAAa,CACX,OAAO,CAAE,MAAM,CAAC,OAAO,CACvB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,QAAQ,CACvB,SAAS,CAAE,IAAI,CACf,gBAAgB,CAAE,KAAK,CACvB,UAAU,CAAE,GAAG,CAAC,IAClB,CAEA,0BAAY,MAAO,CACjB,OAAO,CAAE,IAAI,CACb,YAAY,CAAE,OAAO,CACrB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAC9C,CAEA,0BAAY,SAAU,CACpB,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,WAAW,CACnB,OAAO,CAAE,GACX,CAEA,YAAY,oBAAO,CACjB,YAAY,CAAE,OAChB,CAEA,YAAY,oBAAM,MAAO,CACvB,YAAY,CAAE,OAAO,CACrB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAC7C,CAEA,4BAAe,CACb,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,QAAQ,CACnB,MAAM,CAAE,CACV,CAEA,wBAAW,CACT,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,QAAQ,CACnB,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,MACd"}'
};
const ReligionCaste = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { selectedReligion = "" } = $$props;
  let { selectedCaste = "" } = $$props;
  let { religionError = "" } = $$props;
  let { casteError = "" } = $$props;
  let { disabled = false } = $$props;
  let { religionCasteData = [] } = $$props;
  const dispatch = createEventDispatcher();
  let availableCastes = [];
  if ($$props.selectedReligion === void 0 && $$bindings.selectedReligion && selectedReligion !== void 0) $$bindings.selectedReligion(selectedReligion);
  if ($$props.selectedCaste === void 0 && $$bindings.selectedCaste && selectedCaste !== void 0) $$bindings.selectedCaste(selectedCaste);
  if ($$props.religionError === void 0 && $$bindings.religionError && religionError !== void 0) $$bindings.religionError(religionError);
  if ($$props.casteError === void 0 && $$bindings.casteError && casteError !== void 0) $$bindings.casteError(casteError);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0) $$bindings.disabled(disabled);
  if ($$props.religionCasteData === void 0 && $$bindings.religionCasteData && religionCasteData !== void 0) $$bindings.religionCasteData(religionCasteData);
  $$result.css.add(css$1);
  {
    {
      if (selectedReligion && religionCasteData.length > 0) {
        const mapping = religionCasteData.find((item) => item.religion === selectedReligion);
        availableCastes = mapping ? mapping.castes : [];
        if (selectedCaste && !availableCastes.includes(selectedCaste)) {
          selectedCaste = "";
          dispatch("casteChange", selectedCaste);
        }
      } else {
        availableCastes = [];
        if (!selectedReligion) {
          selectedCaste = "";
        }
      }
    }
  }
  return `<div class="religion-caste-container svelte-7rhb5k"> <div class="form-group svelte-7rhb5k"><label for="religion" class="form-label svelte-7rhb5k" data-svelte-h="svelte-1bzv0wa">Religion</label> <select id="religion" class="${["form-select svelte-7rhb5k", religionError ? "error" : ""].join(" ").trim()}" ${disabled ? "disabled" : ""}><option value="" data-svelte-h="svelte-1xmopxu">Select a Religion</option>${each(religionCasteData.map((item) => item.religion), (religion) => {
    return `<option${add_attribute("value", religion, 0)}>${escape(religion)}</option>`;
  })}</select> ${religionError ? `<p class="error-message svelte-7rhb5k">${escape(religionError)}</p>` : ``}</div>  <div class="form-group svelte-7rhb5k"><label for="caste" class="form-label svelte-7rhb5k" data-svelte-h="svelte-1tqdqje">Caste</label> <select id="caste" class="${["form-select svelte-7rhb5k", casteError ? "error" : ""].join(" ").trim()}" ${disabled || !selectedReligion ? "disabled" : ""}><option value="" data-svelte-h="svelte-1wvma9">Select a Caste</option>${each(availableCastes, (caste) => {
    return `<option${add_attribute("value", caste, 0)}>${escape(caste)}</option>`;
  })}</select> ${casteError ? `<p class="error-message svelte-7rhb5k">${escape(casteError)}</p>` : ``} ${!selectedReligion ? `<p class="help-text svelte-7rhb5k" data-svelte-h="svelte-1fd2es0">Please select a religion first</p>` : ``}</div> </div>`;
});
const css = {
  code: ".image-upload-container.svelte-1ba01b4.svelte-1ba01b4{display:flex;flex-direction:column;gap:0.5rem}.form-label.svelte-1ba01b4.svelte-1ba01b4{font-weight:500;color:#374151;font-size:0.875rem}.upload-area.svelte-1ba01b4.svelte-1ba01b4{position:relative;width:100%;max-width:300px}.preview-container.svelte-1ba01b4.svelte-1ba01b4{position:relative;width:300px;height:300px;border-radius:0.5rem;overflow:hidden;border:2px solid #e5e7eb}.preview-image.svelte-1ba01b4.svelte-1ba01b4{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.preview-overlay.svelte-1ba01b4.svelte-1ba01b4{position:absolute;top:0;left:0;right:0;bottom:0;background-color:rgba(0, 0, 0, 0.5);display:flex;align-items:center;justify-content:center;gap:0.5rem;opacity:0;transition:opacity 0.2s}.preview-container.svelte-1ba01b4:hover .preview-overlay.svelte-1ba01b4{opacity:1}.overlay-button.svelte-1ba01b4.svelte-1ba01b4{padding:0.5rem 1rem;border:none;border-radius:0.375rem;font-size:0.875rem;font-weight:500;cursor:pointer;transition:all 0.2s}.change-button.svelte-1ba01b4.svelte-1ba01b4{background-color:#3b82f6;color:white}.change-button.svelte-1ba01b4.svelte-1ba01b4:hover{background-color:#2563eb}.remove-button.svelte-1ba01b4.svelte-1ba01b4{background-color:#ef4444;color:white}.remove-button.svelte-1ba01b4.svelte-1ba01b4:hover{background-color:#dc2626}.overlay-button.svelte-1ba01b4.svelte-1ba01b4:disabled{opacity:0.5;cursor:not-allowed}.upload-button.svelte-1ba01b4.svelte-1ba01b4{width:300px;height:300px;border:2px dashed #d1d5db;border-radius:0.5rem;background-color:#f9fafb;cursor:pointer;transition:all 0.2s;display:flex;flex-direction:column;align-items:center;justify-content:center;gap:0.75rem;padding:1rem}.upload-button.svelte-1ba01b4.svelte-1ba01b4:hover:not(:disabled){border-color:#3b82f6;background-color:#eff6ff}.upload-button.svelte-1ba01b4.svelte-1ba01b4:disabled{opacity:0.6;cursor:not-allowed}.upload-icon.svelte-1ba01b4.svelte-1ba01b4{width:3rem;height:3rem;color:#9ca3af}.upload-text.svelte-1ba01b4.svelte-1ba01b4{font-weight:500;color:#374151;font-size:0.875rem}.upload-hint.svelte-1ba01b4.svelte-1ba01b4{font-size:0.75rem;color:#6b7280;text-align:center}.file-input.svelte-1ba01b4.svelte-1ba01b4{display:none}.error-message.svelte-1ba01b4.svelte-1ba01b4{color:#ef4444;font-size:0.875rem;margin:0}.info-message.svelte-1ba01b4.svelte-1ba01b4{color:#3b82f6;font-size:0.875rem;margin:0;font-style:italic}.help-text.svelte-1ba01b4.svelte-1ba01b4{color:#6b7280;font-size:0.75rem;margin:0;font-style:italic}",
  map: `{"version":3,"file":"ImageUpload.svelte","sources":["ImageUpload.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { createEventDispatcher } from \\"svelte\\";\\nexport let currentImage = \\"\\";\\nexport let disabled = false;\\nexport let error = \\"\\";\\nconst dispatch = createEventDispatcher();\\nlet uploading = false;\\nlet preview = currentImage;\\nlet fileInput;\\n$: preview = currentImage;\\nasync function handleFileSelect(event) {\\n  const target = event.target;\\n  const file = target.files?.[0];\\n  if (!file) return;\\n  try {\\n    uploading = true;\\n    error = \\"\\";\\n    const formData = new FormData();\\n    formData.append(\\"image\\", file);\\n    const response = await fetch(\\"/api/upload-image\\", {\\n      method: \\"POST\\",\\n      body: formData\\n    });\\n    if (!response.ok) {\\n      const errorData = await response.json();\\n      throw new Error(errorData.error || \\"Failed to upload image\\");\\n    }\\n    const result = await response.json();\\n    preview = result.image;\\n    dispatch(\\"imageChange\\", result.image);\\n  } catch (err) {\\n    error = err instanceof Error ? err.message : \\"Failed to upload image\\";\\n    console.error(\\"Image upload error:\\", err);\\n  } finally {\\n    uploading = false;\\n  }\\n}\\nfunction handleRemoveImage() {\\n  preview = \\"\\";\\n  dispatch(\\"imageChange\\", \\"\\");\\n  if (fileInput) {\\n    fileInput.value = \\"\\";\\n  }\\n}\\nfunction triggerFileInput() {\\n  fileInput?.click();\\n}\\n<\/script>\\n\\n<div class=\\"image-upload-container\\">\\n\\t<label class=\\"form-label\\">Profile Image (Optional)</label>\\n\\n\\t<div class=\\"upload-area\\">\\n\\t\\t{#if preview}\\n\\t\\t\\t<div class=\\"preview-container\\">\\n\\t\\t\\t\\t<img src={preview} alt=\\"Profile preview\\" class=\\"preview-image\\" />\\n\\t\\t\\t\\t<div class=\\"preview-overlay\\">\\n\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\ttype=\\"button\\"\\n\\t\\t\\t\\t\\t\\ton:click={triggerFileInput}\\n\\t\\t\\t\\t\\t\\tclass=\\"overlay-button change-button\\"\\n\\t\\t\\t\\t\\t\\t{disabled}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\tChange\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\ttype=\\"button\\"\\n\\t\\t\\t\\t\\t\\ton:click={handleRemoveImage}\\n\\t\\t\\t\\t\\t\\tclass=\\"overlay-button remove-button\\"\\n\\t\\t\\t\\t\\t\\t{disabled}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\tRemove\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t{:else}\\n\\t\\t\\t<button\\n\\t\\t\\t\\ttype=\\"button\\"\\n\\t\\t\\t\\ton:click={triggerFileInput}\\n\\t\\t\\t\\tclass=\\"upload-button\\"\\n\\t\\t\\t\\tdisabled={disabled || uploading}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<svg class=\\"upload-icon\\" fill=\\"none\\" viewBox=\\"0 0 24 24\\" stroke=\\"currentColor\\">\\n\\t\\t\\t\\t\\t<path\\n\\t\\t\\t\\t\\t\\tstroke-linecap=\\"round\\"\\n\\t\\t\\t\\t\\t\\tstroke-linejoin=\\"round\\"\\n\\t\\t\\t\\t\\t\\tstroke-width=\\"2\\"\\n\\t\\t\\t\\t\\t\\td=\\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t<span class=\\"upload-text\\">\\n\\t\\t\\t\\t\\t{uploading ? 'Processing...' : 'Click to upload image'}\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<span class=\\"upload-hint\\">JPEG, PNG, WebP or GIF (max 10MB)</span>\\n\\t\\t\\t</button>\\n\\t\\t{/if}\\n\\n\\t\\t<input\\n\\t\\t\\tbind:this={fileInput}\\n\\t\\t\\ttype=\\"file\\"\\n\\t\\t\\taccept=\\"image/jpeg,image/jpg,image/png,image/webp,image/gif\\"\\n\\t\\t\\ton:change={handleFileSelect}\\n\\t\\t\\tclass=\\"file-input\\"\\n\\t\\t\\t{disabled}\\n\\t\\t/>\\n\\t</div>\\n\\n\\t{#if uploading}\\n\\t\\t<p class=\\"info-message\\">Processing image (resizing to 300x300, converting to JPEG)...</p>\\n\\t{/if}\\n\\n\\t{#if error}\\n\\t\\t<p class=\\"error-message\\">{error}</p>\\n\\t{/if}\\n\\n\\t<p class=\\"help-text\\">Image will be automatically resized to 300x300 pixels and converted to JPEG format.</p>\\n</div>\\n\\n<style>\\n\\t.image-upload-container {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.5rem;\\n\\t}\\n\\n\\t.form-label {\\n\\t\\tfont-weight: 500;\\n\\t\\tcolor: #374151;\\n\\t\\tfont-size: 0.875rem;\\n\\t}\\n\\n\\t.upload-area {\\n\\t\\tposition: relative;\\n\\t\\twidth: 100%;\\n\\t\\tmax-width: 300px;\\n\\t}\\n\\n\\t.preview-container {\\n\\t\\tposition: relative;\\n\\t\\twidth: 300px;\\n\\t\\theight: 300px;\\n\\t\\tborder-radius: 0.5rem;\\n\\t\\toverflow: hidden;\\n\\t\\tborder: 2px solid #e5e7eb;\\n\\t}\\n\\n\\t.preview-image {\\n\\t\\twidth: 100%;\\n\\t\\theight: 100%;\\n\\t\\t-o-object-fit: cover;\\n\\t\\t   object-fit: cover;\\n\\t}\\n\\n\\t.preview-overlay {\\n\\t\\tposition: absolute;\\n\\t\\ttop: 0;\\n\\t\\tleft: 0;\\n\\t\\tright: 0;\\n\\t\\tbottom: 0;\\n\\t\\tbackground-color: rgba(0, 0, 0, 0.5);\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t\\tgap: 0.5rem;\\n\\t\\topacity: 0;\\n\\t\\ttransition: opacity 0.2s;\\n\\t}\\n\\n\\t.preview-container:hover .preview-overlay {\\n\\t\\topacity: 1;\\n\\t}\\n\\n\\t.overlay-button {\\n\\t\\tpadding: 0.5rem 1rem;\\n\\t\\tborder: none;\\n\\t\\tborder-radius: 0.375rem;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tfont-weight: 500;\\n\\t\\tcursor: pointer;\\n\\t\\ttransition: all 0.2s;\\n\\t}\\n\\n\\t.change-button {\\n\\t\\tbackground-color: #3b82f6;\\n\\t\\tcolor: white;\\n\\t}\\n\\n\\t.change-button:hover {\\n\\t\\tbackground-color: #2563eb;\\n\\t}\\n\\n\\t.remove-button {\\n\\t\\tbackground-color: #ef4444;\\n\\t\\tcolor: white;\\n\\t}\\n\\n\\t.remove-button:hover {\\n\\t\\tbackground-color: #dc2626;\\n\\t}\\n\\n\\t.overlay-button:disabled {\\n\\t\\topacity: 0.5;\\n\\t\\tcursor: not-allowed;\\n\\t}\\n\\n\\t.upload-button {\\n\\t\\twidth: 300px;\\n\\t\\theight: 300px;\\n\\t\\tborder: 2px dashed #d1d5db;\\n\\t\\tborder-radius: 0.5rem;\\n\\t\\tbackground-color: #f9fafb;\\n\\t\\tcursor: pointer;\\n\\t\\ttransition: all 0.2s;\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t\\tgap: 0.75rem;\\n\\t\\tpadding: 1rem;\\n\\t}\\n\\n\\t.upload-button:hover:not(:disabled) {\\n\\t\\tborder-color: #3b82f6;\\n\\t\\tbackground-color: #eff6ff;\\n\\t}\\n\\n\\t.upload-button:disabled {\\n\\t\\topacity: 0.6;\\n\\t\\tcursor: not-allowed;\\n\\t}\\n\\n\\t.upload-icon {\\n\\t\\twidth: 3rem;\\n\\t\\theight: 3rem;\\n\\t\\tcolor: #9ca3af;\\n\\t}\\n\\n\\t.upload-text {\\n\\t\\tfont-weight: 500;\\n\\t\\tcolor: #374151;\\n\\t\\tfont-size: 0.875rem;\\n\\t}\\n\\n\\t.upload-hint {\\n\\t\\tfont-size: 0.75rem;\\n\\t\\tcolor: #6b7280;\\n\\t\\ttext-align: center;\\n\\t}\\n\\n\\t.file-input {\\n\\t\\tdisplay: none;\\n\\t}\\n\\n\\t.error-message {\\n\\t\\tcolor: #ef4444;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tmargin: 0;\\n\\t}\\n\\n\\t.info-message {\\n\\t\\tcolor: #3b82f6;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tmargin: 0;\\n\\t\\tfont-style: italic;\\n\\t}\\n\\n\\t.help-text {\\n\\t\\tcolor: #6b7280;\\n\\t\\tfont-size: 0.75rem;\\n\\t\\tmargin: 0;\\n\\t\\tfont-style: italic;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"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"}`
};
const ImageUpload = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { currentImage = "" } = $$props;
  let { disabled = false } = $$props;
  let { error = "" } = $$props;
  createEventDispatcher();
  let uploading = false;
  let preview = currentImage;
  if ($$props.currentImage === void 0 && $$bindings.currentImage && currentImage !== void 0) $$bindings.currentImage(currentImage);
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0) $$bindings.disabled(disabled);
  if ($$props.error === void 0 && $$bindings.error && error !== void 0) $$bindings.error(error);
  $$result.css.add(css);
  preview = currentImage;
  return `<div class="image-upload-container svelte-1ba01b4"><label class="form-label svelte-1ba01b4" data-svelte-h="svelte-1dv1h8j">Profile Image (Optional)</label> <div class="upload-area svelte-1ba01b4">${preview ? `<div class="preview-container svelte-1ba01b4"><img${add_attribute("src", preview, 0)} alt="Profile preview" class="preview-image svelte-1ba01b4"> <div class="preview-overlay svelte-1ba01b4"><button type="button" class="overlay-button change-button svelte-1ba01b4" ${disabled ? "disabled" : ""}>Change</button> <button type="button" class="overlay-button remove-button svelte-1ba01b4" ${disabled ? "disabled" : ""}>Remove</button></div></div>` : `<button type="button" class="upload-button svelte-1ba01b4" ${disabled || uploading ? "disabled" : ""}><svg class="upload-icon svelte-1ba01b4" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path></svg> <span class="upload-text svelte-1ba01b4">${escape("Click to upload image")}</span> <span class="upload-hint svelte-1ba01b4" data-svelte-h="svelte-7k9w6r">JPEG, PNG, WebP or GIF (max 10MB)</span></button>`} <input type="file" accept="image/jpeg,image/jpg,image/png,image/webp,image/gif" class="file-input svelte-1ba01b4" ${disabled ? "disabled" : ""}></div> ${``} ${error ? `<p class="error-message svelte-1ba01b4">${escape(error)}</p>` : ``} <p class="help-text svelte-1ba01b4" data-svelte-h="svelte-6f8y90">Image will be automatically resized to 300x300 pixels and converted to JPEG format.</p> </div>`;
});
const PersonForm = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { person = null } = $$props;
  let { submitLabel = "Submit" } = $$props;
  let { loading = false } = $$props;
  let { religionCasteData = [] } = $$props;
  createEventDispatcher();
  let formData = {
    firstName: person?.firstName || "",
    lastName: person?.lastName || "",
    email: person?.email || "",
    phone: person?.phone || "",
    street: person?.address?.street || "",
    city: person?.address?.city || "",
    state: person?.address?.state || "",
    zipCode: person?.address?.zipCode || "",
    country: person?.address?.country || "",
    religion: person?.religion || "",
    caste: person?.caste || "",
    image: person?.image || ""
  };
  let errors = {};
  if ($$props.person === void 0 && $$bindings.person && person !== void 0) $$bindings.person(person);
  if ($$props.submitLabel === void 0 && $$bindings.submitLabel && submitLabel !== void 0) $$bindings.submitLabel(submitLabel);
  if ($$props.loading === void 0 && $$bindings.loading && loading !== void 0) $$bindings.loading(loading);
  if ($$props.religionCasteData === void 0 && $$bindings.religionCasteData && religionCasteData !== void 0) $$bindings.religionCasteData(religionCasteData);
  let $$settled;
  let $$rendered;
  let previous_head = $$result.head;
  do {
    $$settled = true;
    $$result.head = previous_head;
    $$rendered = `<form class="space-y-6 w-full"> <div class="border-b pb-6">${validate_component(ImageUpload, "ImageUpload").$$render(
      $$result,
      {
        currentImage: formData.image,
        disabled: loading
      },
      {},
      {}
    )}</div> <div class="grid grid-cols-1 md:grid-cols-2 gap-4"><div><label for="firstName" class="block text-sm font-medium text-gray-700 mb-2" data-svelte-h="svelte-g6l45t">First Name *</label> <input type="text" id="firstName" name="firstName" class="${[
      "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
      (errors.firstName ? "border-red-300" : "") + " " + (errors.firstName ? "focus:ring-red-500" : "") + " " + (errors.firstName ? "focus:border-red-500" : "")
    ].join(" ").trim()}" placeholder="Enter first name" required${add_attribute("value", formData.firstName, 0)}> ${errors.firstName ? `<p class="mt-1 text-sm text-red-600">${escape(errors.firstName)}</p>` : ``}</div> <div><label for="lastName" class="block text-sm font-medium text-gray-700 mb-2" data-svelte-h="svelte-397643">Last Name *</label> <input type="text" id="lastName" name="lastName" class="${[
      "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
      (errors.lastName ? "border-red-300" : "") + " " + (errors.lastName ? "focus:ring-red-500" : "") + " " + (errors.lastName ? "focus:border-red-500" : "")
    ].join(" ").trim()}" placeholder="Enter last name" required${add_attribute("value", formData.lastName, 0)}> ${errors.lastName ? `<p class="mt-1 text-sm text-red-600">${escape(errors.lastName)}</p>` : ``}</div></div> <div><label for="email" class="block text-sm font-medium text-gray-700 mb-2" data-svelte-h="svelte-4m6zg9">Email Address *</label> <input type="email" id="email" name="email" class="${[
      "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
      (errors.email ? "border-red-300" : "") + " " + (errors.email ? "focus:ring-red-500" : "") + " " + (errors.email ? "focus:border-red-500" : "")
    ].join(" ").trim()}" placeholder="Enter email address" required${add_attribute("value", formData.email, 0)}> ${errors.email ? `<p class="mt-1 text-sm text-red-600">${escape(errors.email)}</p>` : ``}</div> <div><label for="phone" class="block text-sm font-medium text-gray-700 mb-2" data-svelte-h="svelte-1lzxrx8">Phone Number *</label> <input type="tel" id="phone" name="phone" class="${[
      "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500",
      (errors.phone ? "border-red-300" : "") + " " + (errors.phone ? "focus:ring-red-500" : "") + " " + (errors.phone ? "focus:border-red-500" : "")
    ].join(" ").trim()}" placeholder="Enter phone number" required${add_attribute("value", formData.phone, 0)}> ${errors.phone ? `<p class="mt-1 text-sm text-red-600">${escape(errors.phone)}</p>` : ``}</div> <div class="border-t pt-4"><h4 class="text-sm font-medium text-gray-700 mb-4" data-svelte-h="svelte-7ub4ah">Religion &amp; Caste (Optional)</h4> ${validate_component(ReligionCaste, "ReligionCaste").$$render(
      $$result,
      {
        religionError: errors.religion || "",
        casteError: errors.caste || "",
        disabled: loading,
        religionCasteData,
        selectedReligion: formData.religion,
        selectedCaste: formData.caste
      },
      {
        selectedReligion: ($$value) => {
          formData.religion = $$value;
          $$settled = false;
        },
        selectedCaste: ($$value) => {
          formData.caste = $$value;
          $$settled = false;
        }
      },
      {}
    )}</div> <div class="border-t pt-4"><h4 class="text-sm font-medium text-gray-700 mb-4" data-svelte-h="svelte-e6k4j2">Address (Optional)</h4> <div class="space-y-4"><div><label for="street" class="block text-sm font-medium text-gray-700 mb-2" data-svelte-h="svelte-8vcjrf">Street Address</label> <input type="text" id="street" name="street" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Enter street address"${add_attribute("value", formData.street, 0)}></div> <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4"><div><label for="city" class="block text-sm font-medium text-gray-700 mb-2" data-svelte-h="svelte-fxjq3h">City</label> <input type="text" id="city" name="city" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="City"${add_attribute("value", formData.city, 0)}></div> <div><label for="state" class="block text-sm font-medium text-gray-700 mb-2" data-svelte-h="svelte-m8xw93">State</label> <input type="text" id="state" name="state" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="State"${add_attribute("value", formData.state, 0)}></div> <div><label for="zipCode" class="block text-sm font-medium text-gray-700 mb-2" data-svelte-h="svelte-1r3kcul">ZIP Code</label> <input type="text" id="zipCode" name="zipCode" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="ZIP"${add_attribute("value", formData.zipCode, 0)}></div></div> <div><label for="country" class="block text-sm font-medium text-gray-700 mb-2" data-svelte-h="svelte-1wcei33">Country</label> <input type="text" id="country" name="country" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Country"${add_attribute("value", formData.country, 0)}></div></div></div> <div class="flex space-x-3 pt-4"><button type="submit" ${loading ? "disabled" : ""} class="flex-1 bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-medium">${escape(loading ? "Processing..." : submitLabel)}</button> <button type="button" ${loading ? "disabled" : ""} class="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-medium">Cancel</button></div></form>`;
  } while (!$$settled);
  return $$rendered;
});
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { data } = $$props;
  if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
  return `${$$result.head += `<!-- HEAD_svelte-1ic0nun_START -->${$$result.title = `<title>Add New Person - Person Manager</title>`, ""}<!-- HEAD_svelte-1ic0nun_END -->`, ""} <div class="max-w-2xl mx-auto"><div class="mb-6" data-svelte-h="svelte-1r93tpy"><h1 class="text-2xl font-bold text-gray-900">Add New Person</h1> <p class="text-gray-600 mt-1">Create a new person record</p></div> <div class="bg-white shadow-sm rounded-lg p-6">${validate_component(PersonForm, "PersonForm").$$render(
    $$result,
    {
      submitLabel: "Create Person",
      religionCasteData: data.religionCasteData
    },
    {},
    {}
  )}</div></div>`;
});
export {
  Page as default
};
